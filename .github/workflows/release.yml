name: Release
on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Clippy
        run: cargo clippy

      - name: Run rustfmt
        run: cargo fmt --check

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.0
        with:
          versionSpec: '5.12.0'

      - name: Create GitVersion.yml
        run: |
          cat <<EOF > GitVersion.yml
          assembly-versioning-scheme: MajorMinorPatch
          assembly-file-versioning-scheme: MajorMinorPatch
          assembly-informational-format: '{InformationalVersion}'
          mode: Mainline
          increment: Inherit
          continuous-delivery-fallback-tag: ci
          tag-prefix: '[vV]'
          major-version-bump-message: '(breaking|major|incompatible):'
          minor-version-bump-message: '(feature|minor|enhancement|new|update|improvement|upgrade|feat):'
          patch-version-bump-message: '(fix|patch|bugfix|hotfix|correction|adjustment|tweak):'
          no-bump-message: '(none|skip|no-release|trivial|docs|documentation|style|refactor|chore|test):'
          legacy-semver-padding: 4
          build-metadata-padding: 4
          commits-since-version-source-padding: 4
          tag-pre-release-weight: 60000
          commit-message-incrementing: Enabled
          merge-message-formats: {}
          update-build-number: true
          EOF

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.2.0
        with:
          useConfigFile: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push docker image release
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: cnieg/gitlab-tokens-exporter:${{ env.semVer }},cnieg/gitlab-tokens-exporter:latest

      - name: Create tag
        uses: rickstaa/action-create-tag@v1.7.2
        with:
          tag: ${{ env.semVer }}
          force_push_tag: true

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1.16.0
        with:
          generateReleaseNotes: true
          tag: ${{ env.semVer }}

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: cnieg/gitlab-tokens-exporter
          readme-filepath: ./README_dockerhub.md
          short-description: ${{ github.event.repository.description }}
