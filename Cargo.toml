[package]
name = "gitlab-tokens-exporter"
version = "2.0.0"
edition = "2024"
description = "Export gitlab tokens remaining validity days as prometheus metrics"
license = "Apache-2.0 license"
repository = "https://github.com/cnieg/gitlab-tokens-exporter/"
keywords = ["gitlab", "tokens", "prometheus"]
categories = ["prometheus-exporter", "security", "monitoring"]

[dependencies]
axum = { version = "0.8", default-features = false, features = ["http1", "tokio"] }
chrono = { version = "0.4", default-features = false, features = ["alloc", "clock", "serde", "std"] }
dotenv = { version = "0.15", default-features = false }
parse_link_header = { version = "0.4", default-features = false, features = ["http"] }
regex = { version = "1", default-features = false }
reqwest = { version = "0.12", default-features = false, features = ["json", "rustls-tls"] }
serde = { version = "1", default-features = false, features = ["derive"] }
serde_repr = { version = "0.1", default-features = false }
tokio = { version = "1", default-features = false, features = ["macros", "rt", "signal"] }
tracing = { version = "0.1", default-features = false, features = ["attributes"] }
tracing-subscriber = { version = "0.3", default-features = false, features = ["ansi", "env-filter", "fmt", "std"] }

[dev-dependencies]
regex = { version = "1" }
once_cell = { version = "1" }

[lints.rust]
unsafe_code = "forbid"

[lints.clippy]
cargo        = { priority = -1, level = "deny" }
complexity   = { priority = -1, level = "deny" }
correctness  = { priority = -1, level = "deny" }
nursery      = { priority = -1, level = "deny" }
pedantic     = { priority = -1, level = "deny" }
perf         = { priority = -1, level = "deny" }
restriction  = { priority = -1, level = "deny" }
style        = { priority = -1, level = "deny" }
suspicious   = { priority = -1, level = "deny" }

# We allow the following clippy lints
blanket_clippy_restriction_lints    = "allow"   # We want clippy in extreme mode so yes, we want this ;)
implicit_return                     = "allow"   # We want to use implicit return
multiple_crate_versions             = "allow"   # We cannot control our dependencies
question_mark_used                  = "allow"   # We want to be able to use the question mark operator
ref_patterns                        = "allow"   # We want to be able to use 'ref' when pattern matching
single_call_fn                      = "allow"   # We prefer to have shorter functions even if they are only used once

[profile.release]
strip = true	    # Automatically strip symbols from the binary
lto = "fat"         # Enable link time optimization
